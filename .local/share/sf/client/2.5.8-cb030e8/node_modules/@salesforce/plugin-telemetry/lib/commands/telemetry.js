"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
const sf_plugins_core_1 = require("@salesforce/sf-plugins-core");
const enabledCheck_1 = require("@salesforce/telemetry/enabledCheck");
const telemetry_1 = require("../telemetry");
class TelemetryGet extends sf_plugins_core_1.SfCommand {
    async run() {
        const enabled = await (0, enabledCheck_1.isEnabled)();
        const cliId = global.cliTelemetry?.getCLIId();
        this.log(`Telemetry is ${enabled ? 'enabled' : 'disabled'}.`);
        this.log(`Telemetry tmp directory is ${telemetry_1.default.tmpDir}.`);
        this.log(`Telemetry cache directory is ${this.config.cacheDir}.`);
        this.log();
        this.log(`Salesforce CLI ID is ${cliId}.`);
        return {
            enabled,
            cliId,
            tmpDir: telemetry_1.default.tmpDir,
            cacheDir: this.config.cacheDir,
        };
    }
}
exports.default = TelemetryGet;
TelemetryGet.hidden = true;
//# sourceMappingURL=telemetry.js.map